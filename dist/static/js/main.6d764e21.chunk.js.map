{"version":3,"sources":["card.jpg","components/layout/SignedInLinks.js","store/action/authAction.js","components/layout/SignedOutLinks.js","components/layout/Navbar.js","components/dashboard/Notifications.js","components/projects/ProjectSummary.js","components/projects/ProjectList.js","components/dashboard/DashBoard.js","components/projects/ProjectDetails.js","components/auth/SignIn.js","components/auth/SignUp.js","components/projects/CreateProject.js","store/action/projectAction.js","App.js","serviceWorker.js","store/reducer/authReducer.js","store/reducer/projectReducer.js","store/reducer/rootReducer.js","config/fbConfig.js","index.js"],"names":["module","exports","__webpack_require__","p","connect","state","profile","firebase","dispatch","signOut","getState","_ref2","getFirebase","auth","then","type","props","shortName","isEmpty","firstName","charAt","lastName","react_default","a","createElement","className","react_router_dom","to","style","cursor","onClick","marginLeft","SignedOutLinks","links","uid","layout_SignedInLinks","lib","brand","padding","alignLinks","Notifications","refreshPageCount","_this2","this","intervalId","setInterval","setState","clearInterval","notifications","map","noti","i","key","id","user","content","moment","time","toDate","fromNow","Component","ProjectSummary","_ref","title","createdAt","authorFirstName","authorLastName","toString","calendar","ProjectList","projects","e","projects_ProjectSummary","DashBoard","_this$props","Notifications_Notifications","react_router","compose","firestore","ordered","firestoreConnect","collection","orderBy","limit","ownProps","match","params","data","project","console","log","SignIn","email","password","handleChange","_this","Object","defineProperty","target","value","handleSubmit","preventDefault","signIn","authError","onSubmit","required","onChange","htmlFor","creds","credentials","signInWithEmailAndPassword","catch","err","SignUp","signUp","marginTop","newUser","_ref3","getFirestore","createUserWithEmailAndPassword","resp","doc","set","initials","CreateProject","createProject","history","push","authorId","add","objectSpread","Date","App","react_favicon_default","url","require","Navbar","exact","path","component","ProjectDetails","Boolean","window","location","hostname","initState","authReducer","arguments","length","undefined","action","message","projectReducer","rootReducer","combineReducers","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","locale","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","fbConfig","reactReduxFirebase","useFirestoreForProfile","userProfile","attachAuthIsReady","firebaseAuthIsReady","ReactDOM","render","es","App_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.6d764e21.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/card.27b860c1.jpg\";","/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React from 'react'\nimport { Link, NavLink } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { signOut } from '../../store/action/authAction'\n\nconst SignedInLinks = (props) => {\n    let shortName = ''\n    if (props.profile && !props.profile.isEmpty) shortName = props.profile.firstName.charAt(0) + props.profile.lastName.charAt(0)\n    return(\n        <div>\n            <li className=\"sidenav-close\"><Link to='/create-project'>New Project</Link></li>\n            <li className=\"sidenav-close\" style={{ cursor: 'pointer' }}><a onClick={props.signOut}>Log Out</a></li>\n            <NavLink style={{marginLeft: 30}} to='/' className='sidenav-close btn btn-floating pink lighten-1 text-center'>{shortName}</NavLink>\n        </div>\n    )\n}\n\nconst mapStateToProps = (state) => ({\n    profile: state.firebase.profile\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n    signOut: () => dispatch(signOut())\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignedInLinks)\n","export const signIn = (credentials) => {\n    return (dispatch, getState, { getFirebase }) => {\n        const firebase = getFirebase()\n\n        firebase.auth().signInWithEmailAndPassword(\n            credentials.email,\n            credentials.password,\n        ).then(() => {\n            dispatch({ type: 'LOGIN_SUCCESS' })\n        }).catch((err) => {\n            dispatch({ type: 'LOGIN_ERROR', err })\n        })\n    }\n}\n\nexport const signOut = () => {\n    return (dispatch, getState, { getFirebase }) => {\n        const firebase = getFirebase()\n\n        firebase.auth().signOut().then(() => {\n            dispatch({ type: 'SIGNOUT_SUCCESS' })\n        })\n    }\n}\n\nexport const signUp = (newUser) => {\n    return (dispatch, getState, { getFirebase, getFirestore }) => {\n        const firebase = getFirebase()\n        const firestore = getFirestore()\n\n        firebase.auth().createUserWithEmailAndPassword(\n            newUser.email,\n            newUser.password,\n        ).then((resp) => {\n            return firestore.collection('users').doc(resp.user.uid).set({\n                firstName: newUser.firstName,\n                lastName: newUser.lastName,\n                initials: newUser.firstName.charAt(0) + newUser.lastName.charAt(0)\n            })\n        }).then(() => {\n            dispatch({ type: 'SIGNUP_SUCCESS' })\n        }).catch((err) => {\n            dispatch({ type: 'SIGNUP_ERROR', err })\n        })\n    }\n}\n","import React from 'react'\nimport { Link } from 'react-router-dom'\n\nexport default () => (\n    <div>\n        <li className=\"sidenav-close\"><Link to='/signup'>Signup</Link></li>\n        <li className=\"sidenav-close\"><Link to='/signin'>Login</Link></li>\n    </div>\n)\n","import React from 'react'\nimport SignedInLinks from './SignedInLinks'\nimport SignedOutLinks from './SignedOutLinks'\nimport { connect } from 'react-redux'\nimport { Navbar } from 'react-materialize'\n\nconst NavbarComponent = (props) => {\n    const { auth } = props\n    const links = auth.uid ? <SignedInLinks /> : <SignedOutLinks />\n    return(\n        <Navbar className=\"grey darken-3\" brand={<a style={{padding: '0 10px'}}>Sikarin</a>} alignLinks=\"right\">\n            {links}\n        </Navbar>\n    )\n}\n\nconst mapStateToprops = (state) => ({\n    auth: state.firebase.auth\n})\n\nexport default connect(mapStateToprops)(NavbarComponent)\n","import React, { Component } from 'react'\nimport moment from 'moment'\n\nexport default class Notifications extends Component {\n    state = {\n        refreshPageCount: 0\n    }\n\n    componentDidMount() {\n        this.intervalId = setInterval(() => {\n            this.setState({ refreshPageCount: this.state.refreshPageCount+1 })\n        }, 3000)\n    }\n\n    componentWillUnmount() {\n        clearInterval(this.intervalId)\n    }\n\n    render() {\n        const { notifications } = this.props\n        return (\n        <div className=\"section\">\n            <div className=\"card z-depth-0\">\n                <div className=\"card-content\">\n                    <span className=\"card-title\">\n                        Notification\n                    </span>\n                    <ul className=\"notifications\">\n                        {notifications && notifications.map((noti, i) => (\n                            <li key={noti.id}>\n                                <span className=\"pink-text\">{noti.user}</span>\n                                <span style={{marginLeft: 4}}>{noti.content}</span>\n                                <div className=\"grey-text note-date\">\n                                    {moment(noti.time.toDate()).fromNow()}\n                                </div>\n                            </li>\n                        ))}\n                    </ul>\n                </div>\n            </div>\n        </div>\n        )\n    }\n}\n","import React from 'react'\nimport moment from 'moment'\n\nconst ProjectSummary = ({ title, createdAt, authorFirstName, authorLastName }) => (\n    <div className=\"card z-depth-0 project-summary\">\n        <div className=\"card-content gery-text text-darken-3\">\n            <span className=\"card-title\">{title}</span>\n            <p>Posted by {authorFirstName} {authorLastName}</p>\n            <p className=\"grey-text\">{moment(createdAt.toDate().toString()).calendar()}</p>\n        </div>\n    </div>\n)\n\nexport default ProjectSummary\n","import React from 'react'\nimport ProjectSummary from './ProjectSummary'\nimport { Link } from 'react-router-dom'\n\nexport default ({projects}) => (\n    <div className=\"project-list section\">\n        {\n            projects && projects.map((e, i) => {\n                return (\n                <Link to={'/project/' + e.id} key={e.id}>\n                <ProjectSummary\n                    title={e.title}\n                    content={e.content}\n                    authorFirstName={e.authorFirstName}\n                    authorLastName={e.authorLastName}\n                    createdAt={e.createdAt}\n                    />\n                </Link>\n            )})\n        }\n    </div>\n)\n","import React, { Component } from 'react'\nimport Notifications from './Notifications'\nimport ProjectList from '../projects/ProjectList'\nimport { connect } from 'react-redux'\nimport { compose } from 'redux'\nimport { firestoreConnect } from 'react-redux-firebase'\nimport { Redirect } from 'react-router-dom'\n\nclass DashBoard extends Component {\n    render() {\n        const { projects, auth, notifications } = this.props\n        if (!auth.uid) return <Redirect to='/signin' />\n        return (\n            <div className=\"dashboard container\">\n                <div className=\"row\">\n                    <div className=\"col s12 m6\">\n                        <ProjectList projects={projects} />\n                    </div>\n                    <div className=\"col s12 m5\">\n                        <Notifications notifications={notifications} />\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    projects: state.firestore.ordered.projects,\n    auth: state.firebase.auth,\n    notifications: state.firestore.ordered.notifications,\n})\n\nexport default compose(\n    connect(mapStateToProps),\n    firestoreConnect([\n        { collection: 'projects', orderBy: ['createdAt', 'desc'] },\n        { collection: 'notifications', limit: 3, orderBy: ['time', 'desc'] },\n    ]),\n)(DashBoard)\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { firestoreConnect } from 'react-redux-firebase'\nimport { compose } from 'redux'\nimport { Redirect } from 'react-router-dom'\nimport moment from 'moment'\n\nconst ProjectDetails = (props) => {\n    const { project, auth } = props\n    if (!auth.uid) return <Redirect to={'/signin'} />\n    if (project) {\n        console.log('project : ', project)\n        return (\n            <div className=\"container section project-details\">\n                <div className=\"card z-depth-0\">\n                    <div className=\"card-content\">\n                        <span className=\"card-title\">{project.title}</span>\n                        <p>{project.content}</p>\n                    </div>\n                    <div className=\"card-action gery lighten-4 gery-text\">\n                        <div>Posted by {project.authorFirstName} {project.authorLastName}</div>\n                        <div>{moment(project.createdAt.toDate().toString()).calendar()}</div>\n                    </div>\n                </div>\n            </div>\n        )\n    } else {\n        return (\n            <div className=\"container center\">\n                <p>Loading project...</p>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n    const id = ownProps.match.params.id\n    const projects = state.firestore.data.projects\n    const project = projects ? projects[id] : null\n    return {\n        project,\n        auth: state.firebase.auth\n    }\n}\n\nexport default compose(\n    connect(mapStateToProps),\n    firestoreConnect([\n        { collection: 'projects' }\n    ]),\n)(ProjectDetails)\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { signIn } from '../../store/action/authAction'\nimport { Redirect } from 'react-router-dom'\n\nclass SignIn extends Component {\n    state = {\n        email: '',\n        password: '',\n    }\n\n    handleChange = (e) => {\n        this.setState({\n            [e.target.id]: e.target.value\n        })\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault()\n        this.props.signIn(this.state)\n    }\n\n    render() {\n        const { authError, auth } = this.props\n        if(auth.uid) return <Redirect to={'/'} />\n        return (\n            <div className=\"container\">\n                <form onSubmit={this.handleSubmit} className=\"white\">\n                    <h5 className=\"grey-text text-darken-3\">Sign In</h5>\n                    <div className=\"input-field\">\n                        <input required type=\"email\" id=\"email\" onChange={this.handleChange}/>\n                        <label htmlFor=\"email\">Email</label>\n                    </div>\n                    <div className=\"input-field\">\n                        <input required type=\"password\" id=\"password\" onChange={this.handleChange}/>\n                        <label htmlFor=\"password\">Password</label>\n                    </div>\n                    <div className=\"input-field\">\n                        <button className=\"btn pink lighten-1 z-depth-0\">Login</button>\n                        { authError && \n                            <div className=\"red-text center\">\n                                <p>{authError}</p>\n                            </div>\n                        }\n                    </div>\n                </form>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    authError: state.auth.authError,\n    auth: state.firebase.auth,\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n    signIn: (creds) => dispatch(signIn(creds)),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn)\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { Redirect } from 'react-router-dom'\nimport { signUp } from '../../store/action/authAction'\n\nclass SignUp extends Component {\n    state = {\n        email: '',\n        password: '',\n        firstName: '',\n        lastName: '',\n    }\n\n    handleChange = (e) => {\n        this.setState({\n            [e.target.id]: e.target.value\n        })\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault()\n        this.props.signUp(this.state)\n    }\n\n    render() {\n        const { auth, authError } = this.props\n        if(auth.uid) return <Redirect to={'/'} />\n        return (\n            <div style={{marginTop: -20}} className=\"container\">\n                <form onSubmit={this.handleSubmit} className=\"white\">\n                    <h5 className=\"grey-text text-darken-3\">Sign Up</h5>\n                    <div className=\"input-field\">\n                        <input required type=\"email\" id=\"email\" onChange={this.handleChange}/>\n                        <label htmlFor=\"email\">Email</label>\n                    </div>\n                    <div className=\"input-field\">\n                        <input required type=\"password\" id=\"password\" onChange={this.handleChange}/>\n                        <label htmlFor=\"password\">Password</label>\n                    </div>\n                    <div className=\"input-field\">\n                        <input required type=\"text\" id=\"firstName\" onChange={this.handleChange}/>\n                        <label htmlFor=\"firstName\">First Name</label>\n                    </div>\n                    <div className=\"input-field\">\n                        <input required type=\"text\" id=\"lastName\" onChange={this.handleChange}/>\n                        <label htmlFor=\"lastName\">Last Name</label>\n                    </div>\n                    <div className=\"input-field\">\n                        <button className=\"btn pink lighten-1 z-depth-0\">Sign Up</button>\n                        { authError && \n                            <div className=\"red-text center\">\n                                <p>{authError}</p>\n                            </div>\n                        }\n                    </div>\n                </form>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    auth: state.firebase.auth,\n    authError: state.auth.authError,\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n    signUp: (newUser) => dispatch(signUp(newUser))\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp)\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { createProject } from '../../store/action/projectAction'\nimport { Redirect } from 'react-router-dom'\n\nclass CreateProject extends Component {\n    state = {\n        title: '',\n        content: '',\n    }\n\n    handleChange = (e) => {\n        this.setState({\n            [e.target.id]: e.target.value\n        })\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault()\n        this.props.createProject(this.state)\n        this.props.history.push('/')\n    }\n\n    render() {\n        const { auth } = this.props\n        if (!auth.uid) return <Redirect to={'/signin'} />\n        return (\n            <div className=\"container\">\n                <form onSubmit={this.handleSubmit} className=\"white\">\n                    <h5 className=\"grey-text text-darken-3\">Create new project</h5>\n                    <div className=\"input-field\">\n                        <input required type=\"text\" id=\"title\" onChange={this.handleChange}/>\n                        <label htmlFor=\"title\">Project Title</label>\n                    </div>\n                    <div className=\"input-field\">\n                        <textarea required id=\"content\" className=\"materialize-textarea\" onChange={this.handleChange}/>\n                        <label htmlFor=\"content\">Project Content</label>\n                    </div>\n                    <div className=\"input-field\">\n                        <button className=\"btn pink lighten-1 z-depth-0\">Create</button>\n                    </div>\n                </form>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    auth: state.firebase.auth,\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n    createProject: (project) => dispatch(createProject(project))\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateProject)\n","export const createProject = (project) => {\n    return (dispatch, getState, { getFirebase, getFirestore }) => {\n        // make async call to database\n        const firestore = getFirestore()\n        const profile = getState().firebase.profile\n        const authorId = getState().firebase.auth.uid\n        firestore.collection('projects').add({\n            ...project,\n            authorFirstName: profile.firstName,\n            authorLastName: profile.lastName,\n            authorId,\n            createdAt: new Date(),\n        }).then(() => {\n            dispatch({ type: 'CREATE_PROJECT', project })\n        }).catch(err => {\n            console.log('error :', err)\n            dispatch({ type: 'CREATE_PROJECT_ERROR', err })\n        })\n    }\n}\n","import React, { Component } from 'react'\nimport { BrowserRouter, Switch, Route } from 'react-router-dom'\nimport Navbar from './components/layout/Navbar'\nimport DashBoard from './components/dashboard/DashBoard'\nimport ProjectDetails from './components/projects/ProjectDetails'\nimport SignIn from './components/auth/SignIn'\nimport SignUp from './components/auth/SignUp'\nimport CreateProject from './components/projects/CreateProject'\nimport Favicon from 'react-favicon';\n\nexport default class App extends Component {\n  render() {\n    return (\n      <BrowserRouter>\n        <Favicon url={require('./card.jpg')} />\n        <div className=\"App\">\n          <Navbar />\n          <Switch>\n            <Route exact path='/' component={DashBoard} />\n            <Route path='/project/:id' component={ProjectDetails} />\n            <Route path='/signin' component={SignIn} />\n            <Route path='/signup' component={SignUp} />\n            <Route path='/create-project' component={CreateProject} />\n          </Switch>\n        </div>\n      </BrowserRouter>\n    )\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initState = {\n    authError: null,\n}\n\nconst authReducer = (state = initState, action) => {\n    switch(action.type) {\n        case 'LOGIN_ERROR':\n            console.log('login error')\n            return {\n                ...state,\n                authError: 'Login failed',\n            }\n        case 'LOGIN_SUCCESS':\n            console.log('login success')\n            return {\n                ...state,\n                authError: null,\n            }\n        case 'SIGNOUT_SUCCESS':\n            console.log('signout success')\n            return state\n        case 'SIGNUP_SUCCESS':\n            console.log('signup success')\n            return {\n                ...state,\n                authError: null\n            }\n        case 'SIGNUP_ERROR':\n            console.log('signup error', action.err.message)\n            return {\n                ...state,\n                authError: action.err.message\n            }\n        default:\n            return state\n    }\n}\n\nexport default authReducer\n","const initState = {\n    projects: [\n        {id: '1', title: 'Hi son this is react', content: 'blah blah blah...'},\n        {id: '2', title: 'Redux is very awesome', content: 'blah blah blah...'},\n        {id: '3', title: 'Mobx, Is it good ?', content: 'blah blah blah...'},\n    ],\n}\n\nconst projectReducer = (state = initState, action) => {\n    switch (action.type) {\n        case 'CREATE_PROJECT' :\n            console.log('create project : ', action.project)\n            return state\n        case 'CREATE_PROJECT_ERROR' :\n            console.log('create project error', action.err)\n            return state\n        default:\n            return state\n    } \n}\n\nexport default projectReducer\n","import authReducer from \"./authReducer\"\nimport projectReducer from \"./projectReducer\"\nimport { combineReducers } from 'redux'\nimport { firestoreReducer } from 'redux-firestore'\nimport { firebaseReducer } from 'react-redux-firebase'\n\nconst rootReducer = combineReducers({\n    auth: authReducer,\n    project: projectReducer,\n    firestore: firestoreReducer,\n    firebase: firebaseReducer,\n})\n\nexport default rootReducer\n","import firebase from 'firebase/app'\nimport 'firebase/firestore'\nimport 'firebase/auth'\n\nvar firebaseConfig = {\n    apiKey: \"AIzaSyCH74EO0R-ogi6f8xMCHziv7zO_1sUMgoY\",\n    authDomain: \"react-redux-firebase-9eabb.firebaseapp.com\",\n    databaseURL: \"https://react-redux-firebase-9eabb.firebaseio.com\",\n    projectId: \"react-redux-firebase-9eabb\",\n    storageBucket: \"\",\n    messagingSenderId: \"837266302055\",\n    appId: \"1:837266302055:web:37bcc03a9d5edea7\"\n};\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig)\n\nexport default firebase\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'materialize-css/dist/css/materialize.min.css'\nimport 'materialize-css/dist/js/materialize.min.js'\nimport * as serviceWorker from './serviceWorker'\nimport { createStore, applyMiddleware, compose } from 'redux'\nimport { Provider } from 'react-redux'\nimport rootReducer from './store/reducer/rootReducer'\nimport thunk from 'redux-thunk'\nimport { reduxFirestore, getFirestore } from 'redux-firestore'\nimport { reactReduxFirebase, getFirebase } from 'react-redux-firebase'\nimport fbConfig from './config/fbConfig'\nimport moment from 'moment'\nimport 'moment/locale/th'\nmoment.locale('th')\n\nconst store = createStore(rootReducer, \n    compose(\n        applyMiddleware(thunk.withExtraArgument({ getFirebase, getFirestore })),\n        reduxFirestore(fbConfig),\n        reactReduxFirebase(fbConfig, { \n            useFirestoreForProfile: true,\n            userProfile: 'users',\n            attachAuthIsReady: true }),\n    )\n)\n\nstore.firebaseAuthIsReady.then(() => {\n    ReactDOM.render(<Provider store={store}>\n        <App />\n    </Provider>, document.getElementById('root'));\n    serviceWorker.unregister();\n})\n"],"sourceRoot":""}